{"ast":null,"code":"import _objectSpread from \"/home/dma/projects/react/e-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleAuthProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnashotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    //debugging what contains returned object\n    //const userRef = yield auth.signInWithPopup(googleAuthProvider);\n    //console.log(userRef);\n    const _ref = yield auth.signInWithPopup(googleAuthProvider),\n          user = _ref.user;\n\n    yield getSnashotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEMail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnashotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser(); //quit if user is not signed-in\n\n    if (!userAuth) return;\n    yield getSnashotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //distructure from userCredentials-object\n\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    display\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield signUpSuccess(user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEMailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEMail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEMailSigninStart), call(onSignOutStart), call(onSignUpStart), call(onCheckUserSession), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["/home/dma/projects/react/e-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleAuthProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","UserActionTypes","getSnashotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEMail","payload","email","password","signInWithEmailAndPassword","signOut","isUserAuthenticated","signUp","display","createUserWithEmailAndPassword","onGoogleSigninStart","GOOGLE_SIGN_IN_START","onEMailSigninStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport {\n  auth,\n  googleAuthProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure\n} from \"./user.actions\";\n\nimport UserActionTypes from \"./user.types\";\n\nexport function* getSnashotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    //debugging what contains returned object\n    //const userRef = yield auth.signInWithPopup(googleAuthProvider);\n    //console.log(userRef);\n\n    const { user } = yield auth.signInWithPopup(googleAuthProvider);\n    yield getSnashotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEMail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnashotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    //quit if user is not signed-in\n    if (!userAuth) return;\n\n    yield getSnashotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n//distructure from userCredentials-object\nexport function* signUp({ payload: { email, password, display } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield signUpSuccess(user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEMailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEMail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSigninStart),\n    call(onEMailSigninStart),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onCheckUserSession),\n    call(isUserAuthenticated)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}