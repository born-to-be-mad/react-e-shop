{"ast":null,"code":"var _jsxFileName = \"/home/dma/projects/react/e-shop/src/pages/shop/shop-page.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { WithSpinner } from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.component\";\nimport CollectionPage from \"../collection/collection-page.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async colSnapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(colSnapshot);\n      console.log(collectionMap);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, {\n        isLoading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/dma/projects/react/e-shop/src/pages/shop/shop-page.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionOverview","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","colSnapshot","collectionMap","console","log","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,sDAA5B;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVV,iBADU,GACY,KAAKW,KADjB,CACVX,iBADU;AAElB,UAAMY,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,WAAN,IAAqB;AAC5C,YAAMC,aAAa,GAAGd,+BAA+B,CAACa,WAAD,CAArD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAhB,MAAAA,iBAAiB,CAACgB,aAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KALD;AAMD;;AAEDY,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKV,KADhB,CACCU,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEX,KAAK,IAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEvB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AAjCoC;;AAoCvC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,iBAAiB,EAAEgB,aAAa,IAAIQ,QAAQ,CAACxB,iBAAiB,CAACgB,aAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { WithSpinner } from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.component\";\nimport CollectionPage from \"../collection/collection-page.component\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async colSnapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(colSnapshot);\n      console.log(collectionMap);\n      updateCollections(collectionMap);\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => <CollectionOverviewWithSpinner isLoading />}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}