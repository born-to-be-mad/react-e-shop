{"ast":null,"code":"import _objectSpread from \"/home/dma/projects/react/e-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyADN5bybMjKtyIPrVXKrNRi1fnn3yh1uGA\",\n  authDomain: \"e-shop-db-42778.firebaseapp.com\",\n  databaseURL: \"https://e-shop-db-42778.firebaseio.com\",\n  projectId: \"e-shop-db-42778\",\n  storageBucket: \"e-shop-db-42778.appspot.com\",\n  messagingSenderId: \"237902715500\",\n  appId: \"1:237902715500:web:ed3ff71586a15503525649\",\n  measurementId: \"G-0BTVLPBPYQ\"\n};\nfirebase.initializeApp(config); //firebase.analytics();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnapShot = await userRef.get();\n\n  if (!userSnapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\ngoogleAuthProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleAuthProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/dma/projects/react/e-shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","userSnapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","auth","googleAuthProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,iCAFC;AAGbC,EAAAA,WAAW,EAAE,wCAHA;AAIbC,EAAAA,SAAS,EAAE,iBAJE;AAKbC,EAAAA,aAAa,EAAE,6BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,E,CACA;;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,YAAY,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAA3B;;AAEA,MAAI,CAACD,YAAY,CAACE,MAAlB,EAA0B;AAAA,UAChBC,WADgB,GACOT,QADP,CAChBS,WADgB;AAAA,UACHC,KADG,GACOV,QADP,CACHU,KADG;AAExB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMgB,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMgB,kBAAkB,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAA3B;AACAD,kBAAkB,CAACE,mBAAnB,CAAuC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAvC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,kBAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyADN5bybMjKtyIPrVXKrNRi1fnn3yh1uGA\",\n  authDomain: \"e-shop-db-42778.firebaseapp.com\",\n  databaseURL: \"https://e-shop-db-42778.firebaseio.com\",\n  projectId: \"e-shop-db-42778\",\n  storageBucket: \"e-shop-db-42778.appspot.com\",\n  messagingSenderId: \"237902715500\",\n  appId: \"1:237902715500:web:ed3ff71586a15503525649\",\n  measurementId: \"G-0BTVLPBPYQ\"\n};\n\nfirebase.initializeApp(config);\n//firebase.analytics();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const userSnapShot = await userRef.get();\n\n  if (!userSnapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\ngoogleAuthProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleAuthProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}