{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions.jsx\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fetchCollectionsAsync fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot); //put is the saga effect for creating actions\n\n    yield put(fetchCollectionsSuccess);\n  } catch (error) {} //const test2 = yield (error => fetchCollectionsFailure(error.message);\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/dma/projects/react/e-shop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,uBADF,EAEEC,uBAFF,QAGO,oBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAGd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAA3B,CAHE,CAIF;;AACA,UAAMX,GAAG,CAACI,uBAAD,CAAT;AACD,GAND,CAME,OAAOU,KAAP,EAAc,CAAE,CATqB,CAUvC;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbK,eAAe,CAACa,uBADH,EAEbV,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions.jsx\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fetchCollectionsAsync fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = call(convertCollectionsSnapshotToMap, snapshot);\n    //put is the saga effect for creating actions\n    yield put(fetchCollectionsSuccess);\n  } catch (error) {}\n  //const test2 = yield (error => fetchCollectionsFailure(error.message);\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}